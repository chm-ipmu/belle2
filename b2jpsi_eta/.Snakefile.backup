### Workflow for B -> J/psi eta  analysis
# Author: Colm Murphy
# Institute: IPMU
# Email: colm.murphy@ipmu.jp
# Repository: https://github.com/chm-ipmu/belle2


# Load configfile (list of decay modes considered, etc)
configfile: "snakemake_config/b2jpsi_eta.yaml"

# Use wildcard to make list of all possible decay modes
DECAYS = expand("{jpsi_decay}_{eta_decay}", jpsi_decay=config["jpsi_decays"], eta_decay=config["eta_decays"])

# Parameters for defining how many events each job should generate/pass through simulation
EVENTS_PER_MODE = config["total_events_per_mode"]
EVENTS_PER_JOB = config["events_per_job"]
N_JOBS = list(range(int(EVENTS_PER_MODE / EVENTS_PER_JOB)))


# Dummy rule enforces production of final .root files
rule all:
    input: expand("simulation/root_files/merged/{decay}.root", decay=DECAYS)


# Create MC .root files (not yet passed through Belle II)
rule generate_mc_block:
    input:
         "evt_gen/dec_files/{decay}.DEC"

    output:
         temp("evt_gen/root_files/{decay}_{i}.root")

    shell:
         "basf2 evt_gen/generate.py {EVENTS_PER_JOB} {input} {output} {wildcards.i}"


# Pass generated MC .root files through Belle II detector simulation
rule simulate_b2:
    input:
         "evt_gen/root_files/{decay}_{i}.root"

    output:
         temp("simulation/root_files/{decay}_{i}.root")

    shell:
         "basf2 simulation/belle2.py {input} {output}"

# Merge simulated .root files together for easier analysis
rule merge_simulated:
    input:
         expand("simulation/root_files/{{decay}}_{i}.root", i=N_JOBS)
    output:
         protected("simulation/root_files/merged/{decay}.root")
    shell:
         "hadd {output} {input}"

